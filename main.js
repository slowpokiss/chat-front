(()=>{"use strict";class e{list(){}get(){}create(){}update(){}delete(){}}class t extends e{}const s=document.getElementById("root");new class{constructor(e){this.container=e,this.api=new t,this.websocket=null}init(){this.user=void 0,this.container.innerHTML="",this.openModal()}bindToDOM(){this.chatContainer=document.createElement("div"),this.chatContainer.classList.add("container"),this.chatContainer.innerHTML='<div class="chat__header">Добро пожаловать в чат</div>\n    <button type="button" class="chat__connect">Выйти</button>\n    <div class="chat__container">\n    <div class="chat__userlist"></div>\n      <div class="chat__area">\n        <div class="chat__messages-container"></div>\n        <form class="form">\n          <input class="form__input" placeholder="Type your messages here">\n        </form>\n      </div>\n    </div>',this.container.append(this.chatContainer),this.modalForm=document.querySelector(".form"),this.outChat=document.querySelector(".chat__connect"),this.userList=document.querySelector(".chat__userlist"),this.modalForm.addEventListener("submit",(e=>{e.preventDefault(),this.sendMessage(document.querySelector(".form__input").value),document.querySelector(".form__input").value=""})),this.outChat.addEventListener("click",(e=>{e.preventDefault(),this.websocket.send(JSON.stringify({type:"exit",user:{name:this.user}})),this.user=void 0,this.websocket.close(),this.init()}))}openModal(){this.modal=document.createElement("div"),this.modal.classList.add("modal__background"),this.modal.insertAdjacentHTML("beforeend",'\n    <div class="modal__content">\n      <h2 class="modal__header">Выберите псевдоним</h2>\n      <div class="modal__body">\n        <form class="form__group">\n          <input class="form__input">\n            <button type="submit" class="modal__ok">Отправить</button>\n        </form>\n      </div>\n    </div>'),this.container.append(this.modal),this.modalForm=this.modal.querySelector(".form__group"),this.modalFormInput=this.modal.querySelector(".form__input"),this.modalForm.addEventListener("submit",(e=>{e.preventDefault(),this.onEnterChatHandler()}))}closeModal(){this.modalFormInput.value="",this.modal.remove()}msgTemplate(e,t){const s=e.message.time,n=new Date(s),a=`${`${n.getHours()<10?"0":""}${n.getHours()}:${n.getMinutes()<10?"0":""}${n.getMinutes()}`} ${`${n.getFullYear()}.${n.getMonth()+1<10?"0":""}${n.getMonth()+1}.${n.getDate()<10?"0":""}${n.getDate()}`}`;return t===this.user.name?`\n      <div class="message__container">\n        <div class="message__container-yourself">\n          <div class="message__header">YOU, ${a}</div>\n          ${e.message.text}\n        </div>\n      </div>`:`\n      <div class="message__container">\n        <div class="message__container-interlocutor">\n        <div class="message__header">${this.user.name}, ${a}</div>\n        ${e.message.text}\n        </div>\n      </div>\n      `}subscribeOnEvents(){this.websocket=new WebSocket("wss://chat-server-y0ff.onrender.com/ws"),this.websocket.addEventListener("open",(e=>{console.log(e)})),this.websocket.addEventListener("close",(e=>{console.log(e)})),this.websocket.addEventListener("error",(e=>{console.log(e)})),this.websocket.addEventListener("message",(e=>{const t=JSON.parse(e.data);"send"===t.type&&this.renderMessage(t,t.name.name),t.length>0&&(this.userList.innerHTML="",t.forEach((e=>{this.user&&e.name!==this.user.name?this.userList.insertAdjacentHTML("beforeend",`<div class="chat__user">${e.name}</div>`):this.userList.insertAdjacentHTML("beforeend",'<div class="chat__user">YOU</div>')})))}))}onEnterChatHandler(){if(!this.modalFormInput.value.trim())return;const e={name:this.modalFormInput.value.trim()};fetch("https://chat-server-y0ff.onrender.com/new-user",{method:"POST",body:JSON.stringify(e)}).then((t=>{200===t.status&&(this.bindToDOM(),this.closeModal(),this.subscribeOnEvents(),this.user=e),400!==t.status&&409!==t.status||alert("please take another username")}))}sendMessage(e){this.websocket.send(JSON.stringify({type:"send",message:{text:e,time:new Date},name:this.user}))}renderMessage(e,t){document.querySelector(".chat__messages-container").insertAdjacentHTML("beforeend",this.msgTemplate(e,t))}}(s).init()})();